#cloud-config

# Set timezone to Asia/Kolkata
timezone: Asia/Kolkata

# Update and upgrade the system
package_update: true
package_upgrade: true

# Install required packages
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - containerd
  - software-properties-common
  - networkd-dispatcher

# Configure sysctl settings for Kubernetes
write_files:
  - path: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
    permissions: "0644"

  - path: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1
      net.ipv6.conf.all.forwarding = 1
    permissions: "0644"

  - path: /etc/containerd/config.toml
    content: |
      version = 2
      [plugins]
        [plugins."io.containerd.grpc.v1.cri"]
          [plugins."io.containerd.grpc.v1.cri".containerd]
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                runtime_type = "io.containerd.runc.v2"
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                  SystemdCgroup = true
    permissions: "0644"

  - path: /etc/crictl.yaml
    content: |
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 10
      debug: false
    permissions: "0644"

  - path: /etc/kubernetes/kubeadm-config.yaml
    content: |
      apiVersion: kubeadm.k8s.io/v1beta4
      kind: JoinConfiguration
      discovery:
        bootstrapToken:
          token: "${bootstrap_token}"
          apiServerEndpoint: "${master_ip}:6443"
          caCertHashes:
            - "sha256:${ca_cert_hash}"
      nodeRegistration:
        name: "${hostname}"
        kubeletExtraArgs:
          - name: node-ip
            value: "WORKER_IPV4_ADDRESS"

  - path: /usr/local/bin/init-kubernetes-worker.sh
    content: |
      #!/bin/bash
      set -e

      # Load kernel modules
      modprobe overlay
      modprobe br_netfilter

      # Apply sysctl settings
      sysctl --system

      # Disable swap
      swapoff -a
      sed -i '/swap/d' /etc/fstab

      # Configure containerd
      mkdir -p /etc/containerd
      systemctl enable containerd
      systemctl restart containerd

      # Wait for Tailscale to be ready
      echo "Waiting for Tailscale to be ready..."
      until tailscale status >/dev/null 2>&1; do
        sleep 5
      done

      # Get Tailscale IP addresses
      WORKER_IPV4=$(tailscale ip -4)

      # Replace placeholder with actual IP addresses in kubeadm config
      sed -i "s/WORKER_IPV4_ADDRESS/$WORKER_IPV4/g" /etc/kubernetes/kubeadm-config.yaml

      # Get kubernetes apt key
      curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --no-tty --dearmor --batch -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

      # Add kubernetes repository
      echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

      # Install kubernetes components
      apt-get update
      apt-get install -y kubelet kubeadm
      apt-mark hold kubelet kubeadm

      # Join the cluster
      kubeadm join --config=/etc/kubernetes/kubeadm-config.yaml

      echo "Kubernetes worker node setup completed successfully!"
    permissions: "0755"

  - path: /etc/networkd-dispatcher/routable.d/50-tailscale
    content: |
      #!/bin/sh

      ethtool -K $(ip -o route get 8.8.8.8 | cut -f 5 -d " ") rx-udp-gro-forwarding on rx-gro-list off
    permissions: "0755"

# Run commands
runcmd:
  # Install Tailscale
  - ["sh", "-c", "curl -fsSL https://tailscale.com/install.sh | sh"]

  # Configure Tailscale
  - [
      "sh",
      "-c",
      "echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.d/99-tailscale.conf && echo 'net.ipv6.conf.all.forwarding = 1' | sudo tee -a /etc/sysctl.d/99-tailscale.conf && sudo sysctl -p /etc/sysctl.d/99-tailscale.conf",
    ]
  - ["/etc/networkd-dispatcher/routable.d/50-tailscale"]
  - [
      "tailscale",
      "up",
      "--auth-key=${tailscale_auth_key}",
      "--hostname=${hostname}",
      "--advertise-routes=10.244.0.0/16,10.96.0.0/12",
      "--accept-routes",
    ]
  - ["tailscale", "set", "--ssh"]

  # Execute kubernetes worker initialization script
  - ["chmod", "+x", "/usr/local/bin/init-kubernetes-worker.sh"]
  - ["/usr/local/bin/init-kubernetes-worker.sh"]

# Final settings
power_state:
  delay: 1
  mode: reboot
  condition: true
